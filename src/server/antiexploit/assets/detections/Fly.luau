local fly = {
	settings = {
		region3Leeway = 5,
		raycastLeeway = -30,
		maxPartSearch = 25,
		demerits = 2
	}
}

function fly:onDetection(player, playersData, primaryPartPos)
	local physicsData = playersData.physics
	local exploitData = playersData.exploits

	exploitData.flags += 1
	exploitData.lastDetection = os.clock()
	exploitData.demerits += self.settings.demerits
	
	table.insert(exploitData.detections, string.lower(script.Name))
end

function fly:run(player, playersData, timePassed)
	local character = player.Character
	local primaryPart = character.PrimaryPart
	
	local physicsData = playersData.physics
	
	local primaryPartPos = primaryPart.Position
	local lastPosition = physicsData.lastPosition
	
	if not primaryPartPos or not lastPosition then return end
	
	local region3Leeway = self.settings.region3Leeway
	local raycastLeeway = self.settings.raycastLeeway
	
	local raycastResult, searchRegion, terrainArea
	
	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {player.Character}
	raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

	raycastResult = workspace:Raycast(primaryPartPos, Vector3.new(0, -primaryPart.Size.Y + raycastLeeway, 0), raycastParams)
	
	if not raycastResult then
		local region3 = Region3.new(
			Vector3.new(lastPosition.X - region3Leeway, lastPosition.Y - region3Leeway, lastPosition.Z - region3Leeway), 
			Vector3.new(primaryPartPos.X + region3Leeway, primaryPartPos.Y + region3Leeway, primaryPartPos.Z + region3Leeway)
		)
		searchRegion = workspace:FindPartsInRegion3(region3, character, self.settings.maxPartSearch)

		if not next(searchRegion) then
			pcall(function()
				local terrain = workspace.Terrain:ReadVoxels(region3:ExpandToGrid(4), 4)

				for i, voxelX in ipairs(terrain) do
					if terrainArea then break end

					for i, voxelY in ipairs(voxelX) do
						if terrainArea then break end

						for i, voxelZ in ipairs(voxelY) do
							if voxelZ ~= Enum.Material.Air then
								terrainArea = true

								break
							end
						end
					end
				end
			end)
		end
	end
	
	if not raycastResult and not next(searchRegion) and not terrainArea then
		self:onDetection(player, playersData, primaryPartPos)

		return true
	end 
end

return fly
